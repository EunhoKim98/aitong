<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>원주시 스마트 쓰레기통 지도</title>
    <!-- 카카오 지도 api -->
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=<%= apiKey %>"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
		body {
			font-family: Arial, sans-serif;
			font-size: 16px;
			line-height: 1.6;
		}
	
		#map {
			width: 100%;
			height: 85vh;
			overflow: hidden;
		}  
	
		.btn-container {
			display: flex;
			justify-content: center;
			align-items: center;
			margin-bottom: 20px;
			flex-wrap: wrap;
		}
	
		.btn {
			background-color: #4CAF50;
			color: white;
			padding: 5px 16px;
			margin-right: 10px;
			margin-bottom: 10px;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			transition: background-color 0.3s;
		}
	
		.btn:hover {
			background-color: #3e8e41;
		}
	</style>
</head>
<body onload="sendGetRequest()">
	<div id="logo">
		<a href="http://aitong.kro.kr/"><img src="로고.JPG" alt="로고"  width="230" height="60" /></a>
		<img src="적재량.JPG" alt="적재량"  width="250" height="60" />
	
	<div id="map"></div>
	<script>
		var positions = [];
		var request = $.ajax({
			url: "/map",
			method: "GET",
			data: {},
			contentType: 'application/json',
		});

		request.done(function( msg ) {
			msg.forEach(function(a,b) {
				if (a.TRASHCAN_LEVEL >= 80) {
					// TRASHCAN_LEVEL 값이 80 이상인 경우
					var iconSrc = "https://www.google.com/mapfiles/marker.png";
				} else if (a.TRASHCAN_LEVEL >= 50) {
					// TRASHCAN_LEVEL 값이 50 이상인 경우
					var iconSrc = "https://www.google.com/mapfiles/marker_orange.png";
				} else {
					// TRASHCAN_LEVEL 값이 50 미만인 경우
					var iconSrc = "https://www.google.com/mapfiles/marker_green.png";
				}

				var content =  a.TRASHCAN_ID_PK + '은 ' + '<b>' + a.TRASHCAN_LEVEL + '%</b>' + ' 찼습니다.';
				if (a.TRASHCAN_LEVEL >= 80) {
					content += '<span style="color: red;"><b><br>쓰레기통을 비워주세요!!';
				}
				
				var obj = { 
					content: '<div>' + content + '</div>',
					latlng: new kakao.maps.LatLng(a.LOCATION_LAT, a.LOCATION_LONG), 
					iconSrc: iconSrc 
				};
				
				positions.push(obj);			  
			});

			var mapContainer = document.getElementById('map'), // 지도를 표시할 div
				mapOption = {
					center: new kakao.maps.LatLng(37.304759408768966, 127.92273900237785), // 지도의 중심좌표(37.5119, 127.059)
					level: 3 // 지도의 확대 레벨
				};
			
				var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

				// 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
				var zoomControl = new kakao.maps.ZoomControl();
				map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

				// 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다
				for (var i = 0; i < positions.length; i ++) {
					// 마커 이미지의 이미지 크기 입니다
					var imageSize = new kakao.maps.Size(30, 30);
	
					// 마커 이미지를 생성합니다
					var markerImage = new kakao.maps.MarkerImage(positions[i].iconSrc, imageSize);
	
					// 마커를 생성합니다
					var marker = new kakao.maps.Marker({
						map: map, // 마커를 표시할 지도
						position: positions[i].latlng, // 마커의 위치
						image: markerImage // 마커 이미지
					});

				// 마커에 표시할 인포윈도우를 생성합니다
				var infowindow = new kakao.maps.InfoWindow({
					content: positions[i].content, // 인포윈도우에 표시할 내용
					removable: true  // x버튼을 누르면 인포윈도우가 닫히도록 옵션 추가
				});

				// 마커에 클릭이벤트를 등록합니다
				kakao.maps.event.addListener(marker, 'click', getInfoWindowClickHandler(infowindow, positions[i].content, map, marker));
				var openedInfowindow = null;  // 열린 인포윈도우 변수를 선언하고 초기값을 null로 설정합니다.

				function getInfoWindowClickHandler(infowindow, content, map, marker) {
					return function() {
						infowindow.setContent(content);
						infowindow.open(map, marker);
						// 열려있는 인포윈도우가 있으면 닫도록 함
						if (openedInfowindow) {
							openedInfowindow.close();
						}
						openedInfowindow = infowindow;  // openedInfowindow 변수에 현재 열린 인포윈도우 저장
					};
				}
			}});
			
		request.fail(function( jqXHR, textStatus ) {
			alert( "Request failed: " + textStatus );
		});
    </script>
</body>
</html>